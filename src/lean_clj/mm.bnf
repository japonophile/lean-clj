
database ::= outermost-scope-stmt*

<outermost-scope-stmt> ::=
  include-stmt | constant-stmt | stmt

(* File inclusion command; process file as a database.
   Databases should NOT have a comment in the filename. *)
include-stmt ::= <'$['> WS filename <'$]'> WS

(* Constant symbols declaration. *)
constant-stmt ::= <'$c'> WS constant+ <'$.'> WS

(* A normal statement can occur in any scope. *)
<stmt> ::= block | variable-stmt | disjoint-stmt |
  hypothesis-stmt | assert-stmt

(* A block. You can have 0 statements in a block. *)
block ::= <'${'> WS stmt* <'$}'> WS

(* Variable symbols declaration. *)
variable-stmt ::= <'$v'> WS variable+ <'$.'> WS

(* Disjoint variables. Simple disjoint statements have
   2 variables, i.e., "variable*" is empty for them. *)
disjoint-stmt ::= <'$d'> WS variable variable variable* <'$.'> WS

<hypothesis-stmt> ::= floating-stmt | essential-stmt

(* Floating (variable-type) hypothesis. *)
floating-stmt ::= LABEL <'$f'> WS typecode variable <'$.'> WS

(* Essential (logical) hypothesis. *)
essential-stmt ::= LABEL <'$e'> WS typecode MATH-SYMBOL* <'$.'> WS

<assert-stmt> ::= axiom-stmt | provable-stmt

(* Axiomatic assertion. *)
axiom-stmt ::= LABEL <'$a'> WS typecode MATH-SYMBOL* <'$.'> WS

(* Provable assertion. *)
provable-stmt ::= LABEL <'$p'> WS typecode MATH-SYMBOL*
  <'$='> WS proof <'$.'> WS

(* A proof. Proofs may be interspersed by comments.
   If '?' is in a proof it's an "incomplete" proof. *)
proof ::= uncompressed-proof | compressed-proof
uncompressed-proof ::= ( LABEL | '?' WS )+
compressed-proof ::= <'('> WS LABEL* <')'> WS COMPRESSED-PROOF-BLOCK+

typecode ::= constant

filename ::= MATH-SYMBOL
constant ::= MATH-SYMBOL
variable ::= MATH-SYMBOL

(* ASCII printable characters, except '$' and whitespaces *)
<MATH-SYMBOL> ::= #'[\x21-\x23\x25-\x7e]+' WS

LABEL ::= #'[A-Za-z0-9\.\-_]+' WS

COMPRESSED-PROOF-BLOCK ::= (<#'[A-Z]'> | '?')+

(* Comments. $( ... $) and do not nest. *)
<_COMMENT> ::= '$(' WS MATH-SYMBOL* '$)' WS

(* Whitespace *)
<_WHITECHAR> ::= (<' '> | <'\t'> | <'\r'> | <'\n'> | <'\f'>)
<WS> ::= _WHITECHAR+

